{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAM,GAE1BA,EAAA,GAEP,CAMA,MAAMQ,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAOb,EAAOc,EAAMC,GAAU,CAC5BC,OAAOR,EAAKS,SAASjB,MAAMkB,OAC3BF,OAAOR,EAAKS,SAASH,KAAKI,OAC1BF,OAAOR,EAAKS,SAASF,OAAOG,QAG9B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAAG,CAIlCrB,EAHiBqB,EAAI,EACAnB,EAAQc,EAAOK,GAGjCC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjB,MAAMqB,EAAU,uBAAuBtB,QAAeC,MACtDsB,EAAA1B,GAAS2B,OAAOC,QAAQH,EAAS,CAAEI,QAAS,KAAK,IAElDC,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClB,MAAMqB,EAAU,sBAAsBtB,QAAeC,MACrDsB,EAAA1B,GAAS2B,OAAOI,QAAQN,EAAS,CAAEI,QAAS,KAAK,GAEvD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// =====================================================================\n// Створення промісу\n// =====================================================================\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// =====================================================================\n// Об'єкт форми\n// =====================================================================\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const [delay, step, amount] = [\n    Number(form.elements.delay.value),\n    Number(form.elements.step.value),\n    Number(form.elements.amount.value),\n  ];\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const promiseDelay = delay + step * i;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        const message = `✅ Fulfilled promise ${position} in ${delay}ms`;\n        Notiflix.Notify.success(message, { timeout: 2000 });\n      })\n      .catch(({ position, delay }) => {\n        const message = `❌ Rejected promise ${position} in ${delay}ms`;\n        Notiflix.Notify.failure(message, { timeout: 2000 });\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","step","amount","Number","elements","value","i","then","message","$parcel$interopDefault","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.0a6d61d8.js.map"}